openapi: 3.0.0
servers:
  - url: https://api-cateno.sensedia.com/hlg/prepay-holder
    description: Sandbox server (uses test data)
info:
  description: API de Gerenciamento de Portadores Pré-Pago Cateno
  version: 1.0.0
  title: API de Gerenciamento de Portadores 
  contact:
    email: developer@cateno.com.br
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
tags:
  - name: Portador PF
    description: ""
  - name: Portador PJ
    description: ""
  - name: Conta
    description: ""
  - name: Cartão
    description: ""
  - name: Transacionais
    description: ""
security:
  - client_id: []
    access_token: []
    
paths:
  /v1/intermediaries/{intermediary_id}/customers:
    parameters:
    - name: intermediary_id
      in: path
      description: ID do Intermediário
      required: true
      schema:
        type: integer
        format: int64
    post:
      tags:
      - Portador PF
      description: |
        Criação um Portador PF
      requestBody:
        description: | 
          Descrição dos campos de envio para criação de Portador PF
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerSchema'
      responses:
        '201':
          description: Retorna a Entidade de Customer criada.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerSchema'
        "400":
          description: Erro na Requisição
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxErrorSchema'
        "401":
          description: Não autorizado 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxErrorSchema'
        "403":
          description: Acesso Negado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxErrorSchema'
        "404":
          description: Conta não encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxErrorSchema'
        "500":
          description: Erro interno de servidor
    get:
      tags:
      - Portador PF
      description: |
        Listagem de Portadores PF por ID de Intermediario
      responses:
        '200':
          description: Retorna uma Lista de Entidades de Portadores PF.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagingResultsCustomerSchema'
        "400":
          description: Erro na Requisição
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxErrorSchema'
        "401":
          description: Não autorizado 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxErrorSchema'
        "403":
          description: Acesso Negado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxErrorSchema'
        "404":
          description: Conta não encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxErrorSchema'
        "500":
          description: Erro interno de servidor
  /v1/intermediaries/{intermediary_id}/customers/{customer_id}:
    parameters:
    - name: intermediary_id
      in: path
      description: ID do Intermediário
      required: true
      schema:
        type: integer
        format: int64
    - name: customer_id
      in: path
      description: ID do Portador PF
      required: true
      schema:
        type: integer
        format: int64
    patch:
      tags:
        - Portador PF            
      description: |
        Atualizar um Portador PF
      requestBody:
        description: | 
          Descrição dos campos de envio para atualizar Portador PF
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerUpdateSchema'
      responses:
        '204':
          description: O Portador foi alterado com sucesso
        "400":
          description: Erro na Requisição
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxErrorSchema'
        "403":
          description: Acesso Negado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxErrorSchema'
        "404":
          description: Conta não encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxErrorSchema'
        "500":
          description: Erro interno de servidor
      x-amazon-apigateway-integration:
        uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${HolderRegistryCustomerHolderPost.Arn}/invocations
        responses: {}
        httpMethod: "POST"
        type: "aws_proxy"
  /v1/customers:
    get:
      tags:
      - Portador PF
      description: |
        Listagem de Portadores PF
      responses:
        '200':
          description: Retorna uma Lista de Entidades de Portadores PF.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagingResultsCustomerSchema'
        "400":
          description: Erro na Requisição
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxErrorSchema'
        "401":
          description: Não autorizado 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxErrorSchema'
        "403":
          description: Acesso Negado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxErrorSchema'
        "404":
          description: Conta não encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxErrorSchema'
        "500":
          description: Erro interno de servidor
  /v1/customers/{customer_id}:
    parameters:
    - name: customer_id
      in: path
      description: ID do Portador PF
      required: true
      schema:
        type: integer
        format: int64
    get:
      tags:
      - Portador PF
      description: |
        Detalhamento do Portador PF
      responses:
        '200':
          description: Retorna o detalhe Portador PF.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagingResultsCustomerSchema'
        "400":
          description: Erro na Requisição
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxErrorSchema'
        "401":
          description: Não autorizado 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxErrorSchema'
        "403":
          description: Acesso Negado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxErrorSchema'
        "404":
          description: Conta não encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxErrorSchema'
        "500":
          description: Erro interno de servidor

  /v1/intermediaries/{intermediary_id}/companies:
    parameters:
    - name: intermediary_id
      in: path
      description: ID do Intermediário
      required: true
      schema:
        type: integer
        format: int64
    post:
      tags:
      - Portador PJ
      description: |
        Criação um Portador PJ
      requestBody:
        description: | 
          Descrição dos campos de envio para criação de Portador PJ
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompanySchema'
      responses:
        '201':
          description: Retorna a Entidade de Customer criada.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerSchema'
        "400":
          description: Erro na Requisição
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxErrorSchema'
        "401":
          description: Não autorizado 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxErrorSchema'
        "403":
          description: Acesso Negado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxErrorSchema'
        "404":
          description: Conta não encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxErrorSchema'
        "500":
          description: Erro interno de servidor
    get:
      tags:
      - Portador PJ
      description: |
        Criação um Portador PJ
      responses:
        '200':
          description: Retorna uma Lista de Entidades de Portadores PJ.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagingResultsCompanySchema'
        "400":
          description: Erro na Requisição
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxErrorSchema'
        "401":
          description: Não autorizado 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxErrorSchema'
        "403":
          description: Acesso Negado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxErrorSchema'
        "404":
          description: Conta não encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxErrorSchema'
        "500":
          description: Erro interno de servidor
  /v1/intermediaries/{intermediary_id}/companies/{company_id}:
    parameters:
    - name: intermediary_id
      in: path
      description: ID do Intermediário
      required: true
      schema:
        type: integer
        format: int64
    - name: company_id
      in: path
      description: ID do Portador PJ
      required: true
      schema:
        type: integer
        format: int64
    patch:
      tags:
        - Portador PJ          
      description: |
        Atualizar um Portador PJ
      requestBody:
        description: | 
          Descrição dos campos de envio para atualizar Portador PJ
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompanyUpdateSchema'
      responses:
        '204':
          description: O Portador foi alterado com sucesso
        "400":
          description: Erro na Requisição
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxErrorSchema'
        "401":
          description: Não autorizado 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxErrorSchema'
        "403":
          description: Acesso Negado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxErrorSchema'
        "404":
          description: Conta não encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxErrorSchema'
        "500":
          description: Erro interno de servidor
  /v1/companies:
    get:
      tags:
      - Portador PJ
      description: |
        Criação um Portador PJ
      responses:
        '200':
          description: Retorna uma Lista de Entidades de Portadores PJ.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagingResultsCompanySchema'
        "400":
          description: Erro na Requisição
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxErrorSchema'
        "401":
          description: Não autorizado 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxErrorSchema'
        "403":
          description: Acesso Negado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxErrorSchema'
        "404":
          description: Conta não encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxErrorSchema'
        "500":
          description: Erro interno de servidor
  /v1/companies/{company_id}:
    parameters:
    - name: company_id
      in: path
      description: ID do Portador PJ
      required: true
      schema:
        type: integer
        format: int64
    get:
      tags:
      - Portador PJ
      description: |
        Detalhamento do Portador PJ
      responses:
        '200':
          description: Retorna o detalhe Portador PF.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanySchema'
        "400":
          description: Erro na Requisição
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxErrorSchema'
        "401":
          description: Não autorizado 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxErrorSchema'
        "403":
          description: Acesso Negado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxErrorSchema'
        "404":
          description: Conta não encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxErrorSchema'
        "500":
          description: Erro interno de servidor

  /v1/holders/{holder_id}/accounts:
    parameters:
    - name: holder_id
      in: path
      description: ID do Portador
      required: true
      schema:
        type: integer
        format: int64
    post:
      tags:
        - Conta
      description: |
        Criação de Conta do Portador
      requestBody:
        description: | 
          Descrição dos campos de envio para criação de Conta do Portador
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountRequestSchema'
      responses:
        "201":
          description: Retorna a entidade Criada
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountSchema"
        "400":
          description: Erro na Requisição
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxErrorSchema'
        "401":
          description: Não autorizado 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxErrorSchema'
        "403":
          description: Acesso Negado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxErrorSchema'
        "404":
          description: Conta não encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxErrorSchema'
        "500":
          description: Erro interno de servidor
    get:
      tags:
        - Conta
      description: |
        Listagem de Contas do Portador
      parameters:
      - name: page
        in: query
        description: Página
        required: false
        schema:
          type: integer
      - name: size
        in: query
        description: Quantidade de registros na página
        required: false
        schema:
          type: integer
      responses:
        "200":
          description: Retorna uma Lista de Cartões
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PagingResultsAccountSchema"
        "400":
          description: Erro na Requisição
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxErrorSchema'
        "401":
          description: Não autorizado 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxErrorSchema'
        "403":
          description: Acesso Negado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxErrorSchema'
        "404":
          description: Conta não encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxErrorSchema'
        "500":
          description: Erro interno de servidor

  /v1/accounts/{account_id}:
    parameters:
    - name: account_id
      in: path
      description: ID da Conta
      required: true
      schema:
        type: integer
        format: int64
    get:
      tags:
        - Conta
      description: |
        Detalhamento da Conta do Portador
      responses:
        "200":
          description: Retorna o detalhe da conta
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountSchema"
        "400":
          description: Erro na Requisição
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxErrorSchema'
        "401":
          description: Não autorizado 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxErrorSchema'
        "403":
          description: Acesso Negado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxErrorSchema'
        "404":
          description: Conta não encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxErrorSchema'
        "500":
          description: Erro interno de servidor
  /v1/accounts/{account_id}/cards:
    parameters:
    - name: account_id
      in: path
      description: ID do Portador
      required: true
      schema:
        type: integer
        format: int64
    post:
      tags:
        - Cartão
      description: |
        Criação de Conta do Portador
      requestBody:
        description: | 
          Descrição dos campos de envio para criação de Conta do Portador
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CardRequestSchema'
      responses:
        "201":
          description: Retorna a entidade Criada
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CardSchema"
        "400":
          description: Erro na Requisição
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxErrorSchema'
        "401":
          description: Não autorizado 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxErrorSchema'
        "403":
          description: Acesso Negado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxErrorSchema'
        "404":
          description: Conta não encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxErrorSchema'
        "500":
          description: Erro interno de servidor
    get:
      tags:
        - Cartão
      description: |
        Lista de cartões por ID da conta
      responses:
        "200":
          description: Retorna uma Lista de Cartões
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PagingResultsCardSchema"
        "400":
          description: Erro na Requisição
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxErrorSchema'
        "401":
          description: Não autorizado 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxErrorSchema'
        "403":
          description: Acesso Negado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxErrorSchema'
        "404":
          description: Conta não encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxErrorSchema'
        "500":
          description: Erro interno de servidor
components:
  securitySchemes:
    client_id:
      type: apiKey
      name: CLIENT_ID
      in: header
    access_token:
      type: apiKey
      name: ACCESS_TOKEN
      in: header
  schemas:
# Schemas Globais para criação de outros schemas
    4xxErrorSchema:
      type: object
      properties:
        message:
          type: string 
        error_code:
          type: integer
    AuditEmbeddable:
      type: object
      properties:
        active: 
          type: boolean
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    DomainEmbeddable:
      allOf:
        - $ref: '#/components/schemas/AuditEmbeddable'
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
        external_id:
          type: integer
          format: int64
          readOnly: true
        name:
          type: string
    DomainWithAuditEmbeddable:
      allOf:
        - $ref: '#/components/schemas/AuditEmbeddable'
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
        external_id:
          type: integer
          format: int64
          readOnly: true
    DomainIdEmbeddable:
      properties:
        id:
          type: integer
          format: int64
    PagingResults:
      type: 
        object
      properties:
        page:
          type: integer
          format: int64
        size:
          type: integer
          format: int64
        total:
          type: integer
          format: int64
        count:
          type: integer
          format: int64
# Schemas Globais
    AddressTypeSchema:
      allOf:
        - $ref: '#/components/schemas/DomainEmbeddable'
    PhoneTypeSchema:
      allOf:
        - $ref: '#/components/schemas/DomainEmbeddable'
    AddressSchema:
      allOf:
        - $ref: '#/components/schemas/DomainEmbeddable'
      type: object
      required:
      - address_type
      - zip_code
      - street
      - state
      - country
      - correspondence
      properties:
        address_type:
          $ref: '#/components/schemas/AddressTypeSchema'
        zip_code:
          type: string
          pattern: /^[0-9]*$/
        street:
          type: string
        number:
          type: integer
        complement:
          type: string
        reference:
          type: string
        locality:
          type: string
        city:
          type: string
        state:
          type: string
          maxLength: 2
        country:
          type: string
        correspondence:
          type: boolean
    PhoneSchema:
      allOf:
        - $ref: '#/components/schemas/DomainEmbeddable'
        - type: object
      required:
        - ddd
        - phone
        - phone_type
      properties:
        ddd:
          type: string
        phone:
          type: string
        extension_line:
          type: string
          nullable: true
        phone_type:
          $ref: '#/components/schemas/PhoneTypeSchema'
    ModalitySchema:
      allOf:
        - $ref: '#/components/schemas/DomainIdEmbeddable'
    CareerSchema:
      allOf:
        - $ref: '#/components/schemas/DomainIdEmbeddable'
    CareerTypeSchema:
      allOf:
        - $ref: '#/components/schemas/DomainIdEmbeddable'
    MaritalStatusSchema:
      allOf:
        - $ref: '#/components/schemas/DomainIdEmbeddable'
    NationalitySchema:
      allOf:
        - $ref: '#/components/schemas/DomainIdEmbeddable'

# Schemas de Portador
    HolderSchema:
      allOf:
        - $ref: '#/components/schemas/DomainEmbeddable'
      required:
        - email
        - modality
        - addresses
        - phones
      properties:
        email:
          type: string
          format: email
        modalities:
          readOnly: true
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/ModalitySchema'
        modality:
          $ref: '#/components/schemas/ModalitySchema'
          writeOnly: true
        addresses:
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/AddressSchema'
        phones:
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/PhoneSchema'
    PagingResultsCustomerSchema:
      allOf: 
        - $ref: '#/components/schemas/PagingResults'
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/CustomerSchema'
    CustomerSchema:
      allOf:
        - $ref: '#/components/schemas/HolderSchema'
        - type: object
      required:
        - tax_id
      properties:
        tax_id:
          type: string
          pattern: '^[0-9]*$'
        birth_date:
          type: string
          format: date
        mother_name:
          type: string
        genre: 
          type: string
        identity_number: 
          type: string
          pattern: '^[0-9]*$'
        identity_agent:  
          type: string
        identity_state:  
          type: string
        identity_shipping_date:  
          type: string
          format: date
        marital_status: 
          $ref: '#/components/schemas/MaritalStatusSchema'
        nationality: 
          $ref: '#/components/schemas/NationalitySchema'
        career: 
          $ref: '#/components/schemas/CareerSchema'
        career_type:
          $ref: '#/components/schemas/CareerTypeSchema'
    CustomerUpdateSchema:
      properties:
        tax_id:
          type: string
          pattern: '^[0-9]*$'
        birth_date:
          type: string
          format: date
        email:
          type: string
          format: email
        mother_name:
          type: string
        genre: 
          type: string
        identity_number: 
          type: string
          pattern: '^[0-9]*$'
        identity_agent:  
          type: string
        identity_state:  
          type: string
        identity_shipping_date:  
          type: string
          format: date
        marital_status: 
          $ref: '#/components/schemas/MaritalStatusSchema'
        career: 
          $ref: '#/components/schemas/CareerSchema'
        career_type:
          $ref: '#/components/schemas/CareerTypeSchema'
        nationality: 
          $ref: '#/components/schemas/NationalitySchema'
    PagingResultsCompanySchema:
      allOf: 
        - $ref: '#/components/schemas/PagingResults'
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/CompanySchema'
    CompanySchema:
      allOf:
        - $ref: '#/components/schemas/DomainEmbeddable'
        - type: object
      properties:
        email:
          type: string
          format: email
        modalities:
          readOnly: true
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/ModalitySchema'
        modality:
          $ref: '#/components/schemas/ModalitySchema'
          writeOnly: true
        addresses:
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/AddressSchema'
        phones:
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/PhoneSchema'
        tax_id:
          type: string
          pattern: '^[0-9]*$'
        company_name:
          type: string
        fantasy_name:
          type: string
        founding_date: 
          type: string
          format: date
        state_registration:  
          type: string
    CompanyUpdateSchema:
      type: object
      required:
        - company_name
        - email
      properties:
        company_name:
          type: string
        email:
          type: string
# Schemas de Conta
    PagingResultsAccountSchema:
      allOf: 
        - $ref: '#/components/schemas/PagingResults'
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/AccountSchema'
    AccountSchema:
      allOf:
        - $ref: '#/components/schemas/DomainWithAuditEmbeddable'
      properties:
        holder:
          $ref: '#/components/schemas/DomainIdEmbeddable'
        modality:
          $ref: '#/components/schemas/DomainIdEmbeddable'
        status_account:
          $ref: '#/components/schemas/DomainIdEmbeddable'
        global_balance:
          type: number
          format: float
    AccountRequestSchema:
      type: object
      properties:
        address_correspondence_id:
          type: integer
          format: int64
        modality:
          $ref: '#/components/schemas/DomainIdEmbeddable'
# Schemas de Cartao
    PagingResultsCardSchema:
      allOf: 
        - $ref: '#/components/schemas/PagingResults'
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/CardSchema'
    CardSchema:
      allOf:
        - $ref: '#/components/schemas/DomainEmbeddable'
      required:
        - tax_id
      properties:
        account:
          $ref: '#/components/schemas/DomainIdEmbeddable'
        card_configuration:
          $ref: '#/components/schemas/DomainIdEmbeddable'
        status:
          $ref: '#/components/schemas/DomainIdEmbeddable'
        encrypted_number:
          type: string
        is_virtual_card:
          type: boolean
    CardRequestSchema:
      type: object
      required:
        - card_configuration
      properties:
        is_virtual:
          type: boolean
        card_configuration:
          $ref: '#/components/schemas/DomainIdEmbeddable'